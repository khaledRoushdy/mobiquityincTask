<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Kroshdy-LT-9852" ignored="0" name="Tests" tests="12" failures="0" timestamp="29 Sep 2018 00:02:36 GMT" time="5.139" errors="0">
  <testcase name="@BeforeMethod setup" time="4.912" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: cannot determine loading status
from unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &amp;apos;3.11.0&amp;apos;, revision: &amp;apos;e59cfb3&amp;apos;, time: &amp;apos;2018-03-11T20:26:55.152Z&amp;apos;
System info: host: &amp;apos;KROSHDY-LT-9852&amp;apos;, ip: &amp;apos;192.168.1.2&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_161&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\KHALED~1.ROU\AppDa...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.100, webStorageEnabled: true}
Session ID: d371d90af69a5319095bf83d0eb4dc0d">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'KROSHDY-LT-9852', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\KHALED~1.ROU\AppDa...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.100, webStorageEnabled: true}
Session ID: d371d90af69a5319095bf83d0eb4dc0d
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:273)
at com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest.setup(CafeTownsendBaseTest.java:27)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.mobiquityinc.cafetownsend.baseTest.CafeTownsendBaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="shouldCancelAddingNewEmployee" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.CreateEmployeesTests">
    <skipped/>
  </testcase> <!-- shouldCancelAddingNewEmployee -->
  <testcase name="shouldCreateNewEmployeeSuccessfully" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.CreateEmployeesTests">
    <skipped/>
  </testcase> <!-- shouldCreateNewEmployeeSuccessfully -->
  <testcase name="shouldnotAddEmployeeWithInvalidDateFormat" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.CreateEmployeesTests">
    <skipped/>
  </testcase> <!-- shouldnotAddEmployeeWithInvalidDateFormat -->
  <testcase name="shouldDeleteAnExistingEmployeeFromEditingAnEmployee" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.DeleteEmployeesTests">
    <skipped/>
  </testcase> <!-- shouldDeleteAnExistingEmployeeFromEditingAnEmployee -->
  <testcase name="shouldDeleteAnExistingEmployeeFromHomePage" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.DeleteEmployeesTests">
    <skipped/>
  </testcase> <!-- shouldDeleteAnExistingEmployeeFromHomePage -->
  <testcase name="shouldUpdateEmployeesDataSuccessfully" time="0.002" classname="com.mobiquityinc.cafetownsend.tests.EditEmployeesTests">
    <skipped/>
  </testcase> <!-- shouldUpdateEmployeesDataSuccessfully -->
  <testcase name="shouldnotUpdateEmployeesWithInvalidStartDate" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.EditEmployeesTests">
    <skipped/>
  </testcase> <!-- shouldnotUpdateEmployeesWithInvalidStartDate -->
  <testcase name="shouldTheApplicationGoToHomePageAfterSelectingBackButton" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.EmployeesDataTests">
    <skipped/>
  </testcase> <!-- shouldTheApplicationGoToHomePageAfterSelectingBackButton -->
  <testcase name="shouldTheDataOfTheEmployeeIsShownCorrectly" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.EmployeesDataTests">
    <skipped/>
  </testcase> <!-- shouldTheDataOfTheEmployeeIsShownCorrectly -->
  <testcase name="shouldLoginWithValidCredentials" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.LoginTests">
    <skipped/>
  </testcase> <!-- shouldLoginWithValidCredentials -->
  <testcase name="shouldNotLoginWithInvalidCredentials" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.LoginTests">
    <skipped/>
  </testcase> <!-- shouldNotLoginWithInvalidCredentials -->
  <testcase name="shouldLogoutSuccessfully" time="0.0" classname="com.mobiquityinc.cafetownsend.tests.LogoutTests">
    <skipped/>
  </testcase> <!-- shouldLogoutSuccessfully -->
</testsuite> <!-- Tests -->
